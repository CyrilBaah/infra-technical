name: Deploy on Tag

on:
  push:
    tags:
      - 'v*.*.*'  # e.g. v1.0.0

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.PROJECT_NAME }}-github-actions
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Extract tag name
      id: extract-tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.extract-tag.outputs.tag }}
      run: |
        cd api
        docker build -t $ECR_REGISTRY/${{ secrets.PROJECT_NAME }}:$IMAGE_TAG .
        docker push $ECR_REGISTRY/${{ secrets.PROJECT_NAME }}:$IMAGE_TAG
        docker tag $ECR_REGISTRY/${{ secrets.PROJECT_NAME }}:$IMAGE_TAG $ECR_REGISTRY/${{ secrets.PROJECT_NAME }}:latest
        docker push $ECR_REGISTRY/${{ secrets.PROJECT_NAME }}:latest

    - name: Update ECS service
      env:
        IMAGE_TAG: ${{ steps.extract-tag.outputs.tag }}
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.PROJECT_NAME }}-cluster \
          --service ${{ secrets.PROJECT_NAME }}-service \
          --force-new-deployment
