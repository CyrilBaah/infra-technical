name: Create Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "create" to confirm infrastructure creation'
        required: true
        default: ''

permissions:
  id-token: write
  contents: read

jobs:
  create-infra:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm == 'create'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/hello-api-github-actions
        aws-region: eu-west-1

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Import existing resources
      run: |
        cd terraform
        echo "Importing existing resources if they exist..."
        
        # Import GitHub OIDC resources
        terraform import module.github_oidc.aws_iam_role.github_actions[0] hello-api-github-actions 2>/dev/null || echo "GitHub role not found or already imported"
        
        # Import ECR repository
        terraform import module.ecr.aws_ecr_repository.app hello-api 2>/dev/null || echo "ECR not found or already imported"
        
        # Import CloudWatch log group
        terraform import module.ecs.aws_cloudwatch_log_group.app /aws/ecs/hello-api 2>/dev/null || echo "Log group not found or already imported"
        
        # Import IAM roles
        terraform import module.ecs.aws_iam_role.ecs_task_execution hello-api-ecs-task-execution 2>/dev/null || echo "Task execution role not found or already imported"
        terraform import module.ecs.aws_iam_role.ecs_task hello-api-ecs-task 2>/dev/null || echo "Task role not found or already imported"

    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve

    - name: Show infrastructure info
      run: |
        cd terraform
        echo "Infrastructure created successfully!"
        LB_DNS=$(terraform output -raw load_balancer_dns)
        ECR_URL=$(terraform output -raw ecr_repository_url)
        ROLE_ARN=$(terraform output -raw github_actions_role_arn)
        
        echo "Load Balancer: http://$LB_DNS"
        echo "ECR Repository: ${ECR_URL//${{ secrets.AWS_ACCOUNT_ID }}/***MASKED***}"
        echo "GitHub Role ARN: ${ROLE_ARN//${{ secrets.AWS_ACCOUNT_ID }}/***MASKED***}"
